version: '3.8'

services:
  db:
    image: postgres
    container_name: request_tracer_db
    hostname: db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-request_tracer_db}
    ports:
      - "5432:5432"
    volumes:
      - request_tracer_db_data:/var/lib/postgresql/data
    networks:
      - view_counter_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 2s
      timeout: 5s
      retries: 25
      start_period: 2s

  shield:
    image: shieldsio/shields:server-2025-07-01
    container_name: request_tracer_shield
    hostname: shield
    ports:
      - "8380:80"
    networks:
      - view_counter_network
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "80" ]
      interval: 2s
      timeout: 5s
      retries: 25
      start_period: 2s

  app:
    image: femrek/view-counter
    container_name: request_tracer_app
    hostname: app
    build:
      context: .
    ports:
      - "8181:${SPRING_PORT:-8181}"
    environment:
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_PORT=${SPRING_PORT}
    networks:
      - view_counter_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SPRING_PORT}/actuator/health" ]
      interval: 2s
      timeout: 5s
      retries: 75
      start_period: 2s
    depends_on:
      db:
        condition: service_healthy
      shield:
        condition: service_healthy

volumes:
  request_tracer_db_data:

networks:
  view_counter_network:
